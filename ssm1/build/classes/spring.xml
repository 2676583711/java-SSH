<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<!--加载数据库 配置文件 -->
	<context:property-placeholder
		location="classpath:db.properties" />


	<context:component-scan
		base-package="cn.zhou.entity"></context:component-scan>

	<context:annotation-config />


	<!--数据源 -->
	<bean id="c3p0" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}"></property>
		<property name="jdbcUrl" value="${url}"></property>
		<property name="user" value="${username}"></property>
		<property name="password" value="${password}"></property>
	</bean>

	<!-- 配置事务安全管理器交给spring管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="c3p0"></property>
	</bean>

	<!--通知：需要进行事务安全操作的方法，这里是文件配置，也可以注解配置 -->
	<tx:advice id="advice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save.*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!--aop -->
	<!-- <aop:config> -->		<!-- 材料 -->        	<!--切点，增强对象 -->
	<!-- <aop:advisor advice-ref="advice" pointcut="execution(cn.zhou.dao.*.*(..))" 
		/> -->
	<!-- </aop:config> -->


	<!--sqlsessionfactory,这个东西需要两个东西：数据源和mybatis的配置文件 -->
	<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="c3p0"></property>
		<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>

	<!--由于本项目使用mapper代理，所以只需要sqlsefactory就够了,这个其实就是配置的userDao -->
	<bean id="mapper1"
		class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="ssf"></property>
		<!--mapper对应的java接口的代理对象 -->
		<property name="mapperInterface" value="cn.zhou.dao.UserDao"></property>
	</bean>

	<bean id="user" class="cn.zhou.entity.User"></bean>

	<bean id="daoInsert" class="cn.zhou.dao.DaoInsert">
		<property name="user" ref="user"></property>
		<property name="userDao" ref="mapper1"></property>
	</bean>

	<!-- <bean id="httpHandler" class="cn.zhou.controller.HttpHandler"> <property 
		name="daoInsert" ref="daoInsert"></property> </bean> -->


</beans>